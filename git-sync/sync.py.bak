# git_sync/sync.py
import os
import json
from git import Repo
from datetime import datetime

def sync_folder(folder_config):
    folder = os.path.expanduser(folder_config["folder_to_sync"])
    repo_url = folder_config["repo_url"]
    branch = folder_config["branch"]
    commit_message_template = folder_config["commit_message"]

    # Initialize or open Git repo
    if not os.path.exists(os.path.join(folder, ".git")):
        print(f"Initializing repository at {folder}...")
        Repo.init(folder)
    repo = Repo(folder)

    # Commit and push changes
    if repo.is_dirty(untracked_files=True):
        repo.git.add(A=True)
        commit_message = commit_message_template.format(
            timestamp=datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        )
        repo.index.commit(commit_message)
        origin = repo.remote(name="origin") if "origin" in repo.remotes else repo.create_remote("origin", repo_url)
        origin.push(branch)

